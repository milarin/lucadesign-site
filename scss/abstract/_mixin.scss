//--------------------------------
//  コンテンツエリア定義（コンテンツ幅は[variable.scss]にて定義）
//--------------------------------
@mixin contentArea {
    width: 100%;
    max-width: $content_width + ($content_gutter * 2);
    padding: {
        right: $content_gutter;
        left: $content_gutter;
    }
    margin: {
        right: auto;
        left: auto;
    }
}

//--------------------------------
//  全幅セクション（1カラムレイアウトのみ適用可）
//  @parm padding 左右のコンテンツエリアパディングを取る場合はpを入力
//                null => コンテンツエリアパディングなし
//                p => コンテンツエリアパディングあり
//--------------------------------
@mixin contentAreaFullWidth($padding:'') {
    margin-left: calc(50% - 50vw);
    margin-right: calc(50% - 50vw);
    @if $padding == p {
        padding-left: calc(50vw - 50%);
        padding-right: calc(50vw - 50%);
    }
}

//------ コンテンツ幅パディング有り -------//
@mixin contentAreaFullWidthPadding {
    padding-left: calc(50vw - 50%);
    padding-right: calc(50vw - 50%);
    margin-left: calc(50% - 50vw);
    margin-right: calc(50% - 50vw);
}

//--------------------------------
//  メディアクエリ制御（ブレイクポイントは[variable.scss]にて定義）
//  @param size 適用デバイスの指定
//              sm => モバイル
//              md => タブレット
//              lg => デスクトップ
//              ov => ナビゲーションブレイクポイント
//              smmd => モバイル＋タブレット
//              mdlg => タブレット＋デスクトップ
//              lgov =>　デスクトップ　+ ナビゲーションブレイクポイント
//--------------------------------
@mixin media($size) { //[引数]sm：モバイル
    @if $size == sm {
        @media screen and (max-width : $breakpoint_small){
            @content;
        }
    }
    @else if $size == md { //[引数]md：タブレット
        @media screen and (min-width : $breakpoint_small + 1) and (max-width : $breakpoint_medium){ //タブレットのみ適用
            @content;
        }
    }
    @else if $size == lg { //[引数]lg：デスクトップ
        @media screen and (min-width : $breakpoint_medium + 1){
            @content;
        }
    }
    @else if $size == lgov { //[引数]lgov：デスクトップ　+ ナビゲーションブレイクポイント
        @media screen and (min-width : $breakpoint_medium + 1) and (max-width : $breakpoint_over){
            @content;
        }
    }
    @else if $size == ov { //[引数]ov：ナビゲーションブレイクポイント
        @media screen and (max-width : $breakpoint_over + 1){
            @content;
        }
    }
    @else if $size == smmd { //[引数]smmd：モバイル＋タブレット
        @media screen and (max-width : $breakpoint_medium){
            @content;
        }
    }
    @else if $size == mdlg { //[引数]mdlg：タブレット＋デスクトップ
        @media screen and (min-width : $breakpoint_small + 1){
            @content;
        }
    }
}

//--------------------------------
//  Font Awesome 5 （アイコンフォントのスタイル）
//--------------------------------
@mixin fas { //Font Awesome 5 Free Solid
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
}

@mixin far { //Font Awesome 5 Free Regular
    font-family: 'Font Awesome 5 Free';
    font-weight: 400;
}

@mixin fab { //Font Awesome 5 Free Brands
    font-family: 'Font Awesome 5 Brands';
    font-weight: 400;
}

//--------------------------------
//  フォントサイズの単位をremに変換
//  @parm size px単位のフォントサイズを指定
//--------------------------------
@mixin fontSize($size : (.16 * $root_em)) {
    font-size: ($size/(.16 * $root_em)) * 1rem;
}

//--------------------------------
//  webフォントの指定（別途読み込みの必要あり）
//  @parm weight ウェイト指定
//--------------------------------
// @mixin din2014 ($weight :600) { //webフォント：din2014
//     font-family: din-2014, sans-serif!important;
//     font-weight: $weight!important;
//     font-style: normal!important;
// }

//--------------------------------
//  モバイルセクションパディング
//  @param area t => セクションのエリアを指定（上下のパディング値を変動する）
//              t => 上部セクション  （下パディング半分）
//              b => 下部          （上パディング半分）
//              o => 単独          （上下パディング半分）
//              null => 中間
//--------------------------------
@mixin smSectPadding($area:'') { //[引数]$area= t：上部、$area= b：下部、$area= o：単独、引数なし：中間
    $top: 2;
    $bottom: 2;
    @if $area == t {
        $top: 1;
        $bottom: 2;
    }@else if $area == b {
        $top: 2;
        $bottom: 1;
    }@else if $area == o {
        $top: 1;
        $bottom: 1;
    }
    @include media(sm) {
        padding-top: (50px / $top)!important;
        padding-bottom: (50px / $bottom)!important;
    }
}

//--------------------------------
//  フルードイメージ
//  @param height 横幅に対する高さの割合を％で指定（単位省略）
//--------------------------------
@mixin fluid ($height:'62.5') { //[引数]横幅に対する高さの比率
    position: relative;
    &::after {
        content: '';
        display: block;
        width: 100%;
        padding-top: $height * 1%;
    }
    & > img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
}

//--------------------------------
//  リンクレイアー（要素全体にリンクエリアを適用）
//--------------------------------
@mixin layer() {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 2;
}

//--------------------------------
//  ハーフレイアウトメディアボックス
//  @parm gap カラム間の隙間
//--------------------------------
@mixin half($gap:'60') {
    $halfgap : $gap/2;
    display: flex;
    margin: 0 percentage($halfgap / $content_width_calc) * -1;
    @include media(sm) {
        display: block;
    }
    > * {
        flex: 1;
        margin: 0 percentage($halfgap / $content_width_calc);
    }
}

@mixin resetcss {
	margin: 0;
    > *:first-child {
        margin-top: 0;
    }
    h2,
    h3,
    h4,
    h5,
    h6 { //見出し
        font-weight: unset;
        line-height: unset;
        font-feature-settings: unset;
        margin-top: unset;
        margin-bottom: unset;
    }
    h2 {
        font-size: unset;
        border-bottom: unset;
        padding-bottom: unset;
        @include media(sm) {
            font-size: unset;
        }
    }
    h3 {
        font-size: unset;
        @include media(sm) {
            font-size: unset;
        }
    }
    h4 {
        font-size: unset;
        @include media(sm) {
            font-size: unset;
        }
    }
    p { //段落
        line-height: unset;
    }
    p,
    ul,
    ol,
    figure {
        margin-bottom: unset;
    }
    > *:last-child {
        margin-bottom: 0;
    }
}